// Mocks generated by Mockito 5.0.16 from annotations
// in my_todo/test/local_task_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_todo/src/domain/entities/task.dart' as _i4;
import 'package:my_todo/src/domain/usecases/get_saved_tasks_usecase.dart'
    as _i2;
import 'package:my_todo/src/domain/usecases/remove_task_usecase.dart' as _i7;
import 'package:my_todo/src/domain/usecases/save_task_usecase.dart' as _i5;
import 'package:my_todo/src/domain/usecases/update_task_usecase.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [GetSavedTaskUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSavedTaskUseCase extends _i1.Mock
    implements _i2.GetSavedTaskUseCase {
  MockGetSavedTaskUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Task>> call({_i3.Future<void>? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
              returnValue: Future<List<_i4.Task>>.value(<_i4.Task>[]))
          as _i3.Future<List<_i4.Task>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveTaskUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTaskUseCase extends _i1.Mock implements _i5.SaveTaskUseCase {
  MockSaveTaskUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call({_i4.Task? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [UpdateTaskUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateTaskUseCase extends _i1.Mock implements _i6.UpdateTaskUseCase {
  MockUpdateTaskUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call({_i4.Task? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveTaskUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTaskUseCase extends _i1.Mock implements _i7.RemoveTaskUseCase {
  MockRemoveTaskUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call({_i4.Task? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
